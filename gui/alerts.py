import tkinter as tk
import ttkbootstrap as ttk
from utils.db import db_cursor


ALERT_MAP: dict[str, tuple[str, str, str]] = {
    "hypo": (
        "Hipoglisemi Riski",
        "Acil UyarÄ±",
        "HastanÄ±n kan ÅŸekeri seviyesi 70 mg/dLâ€™nin altÄ±na dÃ¼ÅŸtÃ¼. "
        "Hipoglisemi riski! HÄ±zlÄ± mÃ¼dahale gerekebilir."
    ),
    "normal": (
        "Normal Seviye",
        "UyarÄ± Yok",
        "Kan ÅŸekeri seviyesi normal aralÄ±kta. HiÃ§bir iÅŸlem gerekmez."
    ),
    "mid_high": (
        "Orta YÃ¼ksek Seviye",
        "Takip UyarÄ±sÄ±",
        "HastanÄ±n kan ÅŸekeri 111â€“150 mg/dL arasÄ±nda. Durum izlenmeli."
    ),
    "high": (
        "YÃ¼ksek Seviye",
        "Ä°zleme UyarÄ±sÄ±",
        "HastanÄ±n kan ÅŸekeri 151â€“200 mg/dL arasÄ±nda. Diyabet kontrolÃ¼ gereklidir."
    ),
    "very_high": (
        "Ã‡ok YÃ¼ksek Seviye (Hiperglisemi)",
        "Acil MÃ¼dahale UyarÄ±sÄ±",
        "HastanÄ±n kan ÅŸekeri 200 mg/dLâ€™nin Ã¼zerinde. Hiperglisemi durumu. "
        "Acil mÃ¼dahale gerekebilir."
    ),
    "missing_all": (
        "Ã–lÃ§Ã¼m EksikliÄŸi (HiÃ§ GiriÅŸ Yok)",
        "Ã–lÃ§Ã¼m Eksik UyarÄ±sÄ±",
        "Hasta gÃ¼n boyunca kan ÅŸekeri Ã¶lÃ§Ã¼mÃ¼ yapmamÄ±ÅŸtÄ±r. Acil takip Ã¶nerilir."
    ),
    "missing_few": (
        "Ã–lÃ§Ã¼m EksikliÄŸi (3â€™ten Az GiriÅŸ)",
        "Ã–lÃ§Ã¼m Yetersiz UyarÄ±sÄ±",
        "HastanÄ±n gÃ¼nlÃ¼k kan ÅŸekeri Ã¶lÃ§Ã¼m sayÄ±sÄ± yetersiz (<3). Durum izlenmelidir."
    ),
    "info": (
        "Bilgilendirme",
        "Bilgi",
        ""  # BurasÄ± boÅŸ, Ã§Ã¼nkÃ¼ DBâ€™den gelen message zaten gÃ¶sterilecek.
    ),
}

class AlertsWindow(tk.Toplevel):

    def __init__(self, master, doctor_id: int):
        super().__init__(master)
        self.title("ğŸ”” Hasta UyarÄ±larÄ±")
        self.geometry("1100x400")
        self.configure(bg="#2b3e50")

        tree = ttk.Treeview(
            self, columns=("day","patient","status","type","msg"),
            show="headings", bootstyle="info"
        )
        for col, text, w in [
            ("day",     "Tarih",          90),
            ("patient", "Hasta",         200),
            ("status",  "Durum",         210),
            ("type",    "UyarÄ± Tipi",    150),
            ("msg",     "Mesaj",         430),
        ]:
            tree.heading(col, text=text)
            tree.column(col, width=w, anchor="w")
        tree.pack(fill="both", expand=True, padx=10, pady=10)

        self._fill(tree, doctor_id)

    def _fill(self, tree: ttk.Treeview, doc_id: int):
        with db_cursor() as cur:
            cur.execute(
                """
                SELECT a.day,
                       u.full_name   AS patient,
                       a.alert_type  AS code,
                       a.message
                  FROM alerts a
                  JOIN patients p   ON p.id = a.patient_id
                  JOIN users    u   ON u.id = p.id
                 WHERE p.doctor_id = %s
                 ORDER BY a.created_dt DESC
                """,
                (doc_id,)
            )
            rows = cur.fetchall()

        for r in rows:

            status, nice_type, default_msg = ALERT_MAP.get(
                r["code"], ("Bilinmeyen", r["code"], "")
            )
            msg = r["message"] or default_msg
            date_str = r["day"].strftime("%d.%m.%Y") if r["day"] else "-"
            tree.insert(
                "", "end",
                values=(date_str, r["patient"], status, nice_type, msg)
            )
